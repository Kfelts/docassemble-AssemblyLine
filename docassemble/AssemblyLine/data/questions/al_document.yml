---
features:
  javascript:
    - aldocument.js
  css:
    - aldocument.css
---
# This must be in Docassemble YAML due to limits in how Docassemble
# searches for events. It also somewhat safer to limit the scope of what
# events can be triggered by JS
generic object: ALDocumentBundle
event: x.send_email_action_event
code: |
  email_success = x.send_email(to=action_argument('email'), editable=action_argument('editable'), template=action_argument('template'))
  if email_success:
    # Exact phrase below is in Docassemble's words dictionary
    log(word('E-mail was sent to') + ' ' + action_argument('email') ,'success')
  else:
    # E-mail failed is not in the default Docassemble words dictionary
    log(word('E-mail failed'), 'error')
---
generic object: ALDocumentBundle
template: x.send_email_template
# TODO: there may be a better default than "metadata_title".
# In general, we could improve this template
subject: |
  % if len(x) > 1:
  Your "${ metadata_title}" document from ${ al_app_name } is ready
  % else:
  Your "${ metadata_title }" documents from ${ al_app_name } are ready
  % endif
content: |
  Please find the document for ${ users } attached.
---
generic object: TestEvent
event: x.test_event
code: |
  message('Test')
---
attachment:
  variable name: helloworld
  content: |
    Hello, ${ user_name }.  It is ${ current_datetime().format_datetime() }.
---
code: |
  bg_action
  link_screen
---
generic object: ALDocumentBundle
sets: x.bg_action
code: |
  x.bg_action = x.background_action_start()
---
# eventually will become the real event triggered by x.test_event
event: assemble_it
code: |
  background_response(helloworld.pdf, document=the_document)
---
event: link_screen
question: |
  Your document
subquestion: |
  [Click here](${ interview_url_action('get_document', temporary=True) })
---
event: waiting_screen
question: |
  Hang tight, we are assembling your documents
subquestion: |
  This screen will reload every ten seconds until the answer is
  available  
reload: True
---
event: get_document
code: |
  if bg_action.ready():
    response(file=bundle_of_interest.as_pdf(), content_type='application/pdf')
  else:
    waiting_screen